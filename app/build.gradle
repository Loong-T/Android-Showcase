apply plugin: 'com.android.application'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.squareup.sqldelight'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "in.nerd_is.android_showcase"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {

        debug {
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        test {
            java {
                srcDirs += 'src/integrationTest/java'
            }
        }
    }
}

repositories {
    maven {
        url "http://dl.bintray.com/piasy/maven"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(path: ':recycler_simplification')

    // support library
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibaryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibaryVersion"
    compile "com.android.support:support-annotations:$rootProject.ext.supportLibaryVersion"
    compile "com.android.support:palette-v7:$rootProject.ext.supportLibaryVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // UI
    compile 'net.opacapp:multiline-collapsingtoolbar:1.3.1'
    compile "com.github.piasy:BigImageViewer:$rootProject.ext.bigImageViewVersion"
    compile "com.github.piasy:GlideImageLoader:$rootProject.ext.bigImageViewVersion"

    // reactive
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxAndroidVersion"
    compile "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxJavaVersion"

    // IO
    compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:converter-moshi:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"
    compile 'com.squareup.moshi:moshi:1.4.0'

    // Java 8 support
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    compile 'com.annimon:stream:1.1.6'

    // media
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    // di
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"

    // module
    provided "com.google.auto.value:auto-value:$rootProject.ext.autoValueVersion"
    annotationProcessor "com.google.auto.value:auto-value:$rootProject.ext.autoValueVersion"
    provided "com.ryanharter.auto.value:auto-value-moshi-annotations:$rootProject.ext.autoValueMoshiVersion"
    annotationProcessor "com.ryanharter.auto.value:auto-value-moshi:$rootProject.ext.autoValueMoshiVersion"
    compile "com.ryanharter.auto.value:auto-value-parcel-adapter:$rootProject.ext.autoValueParcelVersion"
    annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:$rootProject.ext.autoValueParcelVersion"

    // debug
    debugCompile "com.facebook.stetho:stetho:$rootProject.ext.stethoVersion"
    debugCompile "com.facebook.stetho:stetho-okhttp3:$rootProject.ext.stethoVersion"

    // test
    testCompile('junit:junit:4.12', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    })
    testCompile 'org.mockito:mockito-core:2.7.17'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.threeten:threetenbp:1.3.3'
    testCompile 'com.github.javafaker:javafaker:0.13'

//    androidTestCompile 'com.android.support.test:runner:0.5'
//    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion", {
        exclude group: 'com.android.support'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
