apply plugin: 'com.android.application'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.squareup.sqldelight'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "in.nerd_is.android_showcase"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {

        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        test {
            java {
                srcDirs += 'src/integrationTest/java'
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(path: ':recycler_simplification')

    // support library
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibaryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibaryVersion"
    compile "com.android.support:support-annotations:$rootProject.ext.supportLibaryVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibaryVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // reactive
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.2.4'
    compile "com.trello:rxlifecycle:$rootProject.ext.rxlifecycleVersion"
    compile "com.trello:rxlifecycle-android:$rootProject.ext.rxlifecycleVersion"
    compile "com.trello:rxlifecycle-components:$rootProject.ext.rxlifecycleVersion"

    // IO
    compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:converter-moshi:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.retrofitVersion"
    compile 'com.squareup.moshi:moshi:1.4.0'

    // Java 8 support
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.4'
    compile 'com.annimon:stream:1.1.4'

    // media
    compile 'com.github.bumptech.glide:glide:3.7.0'

    // di
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    compile "com.google.dagger:dagger-android:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"

    // module
    provided "com.google.auto.value:auto-value:1.2"
    annotationProcessor "com.google.auto.value:auto-value:1.2"
    provided 'com.ryanharter.auto.value:auto-value-moshi-annotations:0.4.3'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-moshi:0.4.3'

    // DB
    compile 'com.squareup.sqlbrite:sqlbrite:1.1.1'

    // debug
    debugCompile "com.facebook.stetho:stetho:$rootProject.ext.stethoVersion"
    debugCompile "com.facebook.stetho:stetho-okhttp3:$rootProject.ext.stethoVersion"

    // test
    testCompile('junit:junit:4.12', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    })
    testCompile 'org.mockito:mockito-core:2.7.17'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.threeten:threetenbp:1.3.3'
    testCompile 'com.github.javafaker:javafaker:0.12'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
